import React, { useState } from "react";
import Head from "next/head";
import Layout from "@/layout/layout";
import style from "../styles/Form.module.css";
import Image from "next/image";
import { HiFingerPrint, HiAtSymbol, HiOutlineUser } from "react-icons/hi2";
import Link from "next/link";
import { useFormik } from "formik";

const Login = () => {
  const [isShowPass, setIsShowPass] = useState({
    password: false,
    cPassword: false,
  });

  const onSubmit = async (values) => {
    console.log({ values });
    const response = await fetch("/api/auth/signup", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        name: values.username,
        email: values.email,
        password: values.password,
      }),
    });
    const responseJSON = await response.json();
    console.log(responseJSON);
  };

  const validate = (values) => {
    const errors = {};
    if (values.email.length < 1) {
      errors.email = "Required";
    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i.test(values.email)) {
      errors.email = "Invalid email address";
    }
    if (values.password.length < ``) {
      errors.password = "Required";
    }
    if (values.cPassword.length < ``) {
      errors.cPassword = "Required";
    }

    return errors;
  };

  const formik = useFormik({
    initialValues: {
      email: "",
      username: "",
      password: "",
      cPassword: "",
    },
    validate,
    onSubmit,
  });

  const runPingMongoHandle = async () => {
    const req = await fetch("/api/auth/pingmongo");
    const res = await req.json();
    console.log(res);
  };

  return (
    <Layout>
      <Head>
        <title>Login</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <section className="flex flex-col gap-2">
        <form
          onSubmit={formik.handleSubmit}
          className="flex flex-col gap-5 w-3/4 mx-auto"
        >
          <TitleComp />
          <button
            className="text-black bg-indigo-500 px-4 py-1"
            onClick={runPingMongoHandle}
          >
            Run Mongo
          </button>

          <InputComp
            type="text"
            placeholder="username"
            name="username"
            id="username"
            value={formik.values.username}
            onChange={formik.handleChange}
          >
            <HiOutlineUser size={25} />
          </InputComp>

          <InputComp
            type="email"
            placeholder="email"
            name="email"
            id="email"
            value={formik.values.email}
            onChange={formik.handleChange}
          >
            <HiAtSymbol size={25} />
          </InputComp>

          <InputComp
            type={isShowPass.password ? "text" : "password"}
            placeholder="password"
            name="password"
            id="password"
            value={formik.values.password}
            onChange={formik.handleChange}
          >
            <HiFingerPrint
              size={25}
              onClick={() =>
                setIsShowPass({
                  ...isShowPass,
                  password: !isShowPass.password,
                })
              }
            />
          </InputComp>

          <InputComp
            type={isShowPass.cPassword ? "text" : "password"}
            placeholder="confirm_password"
            name="cPassword"
            id="cPassword"
            value={formik.values.cPassword}
            onChange={formik.handleChange}
          >
            {" "}
            <HiFingerPrint
              size={25}
              onClick={() =>
                setIsShowPass({
                  ...isShowPass,
                  cPassword: !isShowPass.cPassword,
                })
              }
            />
          </InputComp>

          <div className="input-button">
            <button type="submit" className={style.button}>
              Sign Up
            </button>
            <button type="button" className={style.button_custom}>
              Sign Up With Github
              <Image
                src={"/assets/image/github.svg"}
                width="30"
                height={30}
              ></Image>
            </button>
            <button type="button" className={style.button_custom}>
              Sign Up with Google{" "}
              <Image
                src={"/assets/image/google.svg"}
                width="30"
                height={30}
              ></Image>
            </button>
          </div>
        </form>
        <div className="text-center text-gray-400 ">
          already have an account yet?{" "}
          <Link href={"/login"}>
            <p className="text-blue-700">Sign In</p>
          </Link>
        </div>
      </section>
    </Layout>
  );
};

const InputComp = ({
  type,
  placeholder,
  name,
  id,
  value,
  onChange,
  children,
}) => {
  return (
    <div className={style.input_group}>
      <input
        type={type}
        placeholder={placeholder}
        name={name}
        id={id}
        onChange={onChange}
        value={value}
        className={style.input_text}
      />

      <span className={style.input_icon}>{children}</span>
    </div>
  );
};

function TitleComp() {
  return (
    <div className="title">
      <h1 className="text-4xl font-bold text-gray-800">Explore</h1>
      <p className=" w-3/4 mt-4 mx-auto text-center text-gray-400">
        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Ipsam, aut.
      </p>
    </div>
  );
}

export default Login;
